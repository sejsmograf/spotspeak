spring.config.import=./secret.properties
logging.level.org.springframework.security=DEBUG
spring.application.name=spotspeak


spring.jpa.show-sql=true
spring.datasource.driver=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

keycloak.realm-name=spotspeak
keycloak.server-url=https://keycloakspotspeakwebsite.website

# - This way JWT token is verified based on the signature. 
# - This happens locally, without request to the auth server
spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.server-url}/realms/${keycloak.realm-name}


# - Opaque token can be used to always check if token is valid.
# - Requires additional request to resource server in order to introspect the 
# - token every time. Gives the possibility to sign out users any time by invalidating their 
# - token on the authorization server.

# spring.security.oauth2.resourceserver.opaquetoken.client-id=spring-boot-backend
# spring.security.oauth2.resourceserver.opaquetoken.client-secret=NOT_THIS_TIME(get this from keycloak console -> clients and paste here)
# spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://localhost:8081/realms/spotspeak/protocol/openid-connect/token/introspect


springdoc.api-docs.path=/api/docs
